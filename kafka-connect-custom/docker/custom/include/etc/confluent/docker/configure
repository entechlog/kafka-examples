#!/usr/bin/env bash

# adopted from original confluent docker build [1] with
# additional 'standalone' connector properties.
#
# [1] https://github.com/confluentinc/cp-docker-images/blob/3.3.x/debian/kafka-connect-base/include/etc/confluent/docker/configure
#

COMPONENT=kafka-connect

set -o nounset \
    -o errexit \
    -o verbose \
    -o xtrace

dub ensure CONNECT_BOOTSTRAP_SERVERS
dub ensure CONNECT_KEY_CONVERTER
dub ensure CONNECT_VALUE_CONVERTER
dub ensure CONNECT_INTERNAL_KEY_CONVERTER
dub ensure CONNECT_INTERNAL_VALUE_CONVERTER
# This is required to avoid config bugs. You should set this to a value that is
# resolvable by all containers.
dub ensure CONNECT_REST_ADVERTISED_HOST_NAME

# ensure 'standalone' properties
dub ensure STANDALONE_NAME
dub ensure STANDALONE_CONNECTOR_CLASS
dub ensure STANDALONE_KEY_CONVERTER
dub ensure STANDALONE_VALUE_CONVERTER

# Default to 8083, which matches the mesos-overrides. This is here in case we extend the containers to remove the mesos overrides.
if [ -z "$CONNECT_REST_PORT" ]; then
  export CONNECT_REST_PORT=8083
fi

# Fix for https://issues.apache.org/jira/browse/KAFKA-3988
if [[ $CONNECT_INTERNAL_KEY_CONVERTER == "org.apache.kafka.connect.json.JsonConverter" ]] || [[ $CONNECT_INTERNAL_VALUE_CONVERTER == "org.apache.kafka.connect.json.JsonConverter" ]]
then
  export CONNECT_INTERNAL_KEY_CONVERTER_SCHEMAS_ENABLE=false
  export CONNECT_INTERNAL_VALUE_CONVERTER_SCHEMAS_ENABLE=false
fi

if [[ $CONNECT_KEY_CONVERTER == "io.confluent.connect.avro.AvroConverter" ]]
then
  dub ensure CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL
fi

if [[ $CONNECT_VALUE_CONVERTER == "io.confluent.connect.avro.AvroConverter" ]]
then
  dub ensure CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL
fi

if [[ $STANDALONE_KEY_CONVERTER == "io.confluent.connect.avro.AvroConverter" ]]
then
  dub ensure STANDALONE_KEY_CONVERTER_SCHEMA_REGISTRY_URL
fi

if [[ $STANDALONE_VALUE_CONVERTER == "io.confluent.connect.avro.AvroConverter" ]]
then
  dub ensure STANDALONE_VALUE_CONVERTER_SCHEMA_REGISTRY_URL
fi


dub path /etc/"${COMPONENT}"/ writable

dub template "/etc/confluent/docker/${COMPONENT}.properties.template" "/etc/${COMPONENT}/${COMPONENT}.properties"
dub template "/etc/confluent/docker/${COMPONENT}-standalone.properties.template" "/etc/${COMPONENT}/${COMPONENT}-standalone.properties"

# The connect-standalone script expects the log4j config at /etc/kafka/connect-log4j.properties.
dub template "/etc/confluent/docker/log4j.properties.template" "/etc/kafka/connect-log4j.properties"