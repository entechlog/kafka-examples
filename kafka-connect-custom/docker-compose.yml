---
version: '3'

services:
  kafka-connect:
    image: entechlog/cp-kafka-connect:${CONFLUENT_VERSION_TAG}
    container_name: kafka-connect
    build:
      context: ./docker/standalone/
      args:
        CONNECTOR_OWNER: ${CONNECTOR_OWNER}
        CONNECTOR_NAME: ${CONNECTOR_NAME}
        CONNECTOR_VERSION: ${CONNECTOR_VERSION}
    ports:
      - 8083:8083
    environment:
      CUB_CLASSPATH: '/etc/confluent/docker/docker-utils.jar:/usr/share/java/confluent-security/connect/*:/usr/share/java/kafka/*'
      CONNECT_CUB_KAFKA_TIMEOUT: 300
      CONNECT_BOOTSTRAP_SERVERS: ${KAFKA_BOOTSTRAP_SERVERS}
      CONNECT_REST_ADVERTISED_HOST_NAME: 'kafka-connect'
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: kafka-connect-group
      CONNECT_CONFIG_STORAGE_TOPIC: _kafka-connect-group-configs
      CONNECT_OFFSET_STORAGE_TOPIC: _kafka-connect-group-offsets
      CONNECT_STATUS_STORAGE_TOPIC: _kafka-connect-group-status
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_KEY_CONVERTER_SCHEMAS_ENABLE: 'false'
      CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE: 'false'
      CONNECT_INTERNAL_KEY_CONVERTER: 'org.apache.kafka.connect.json.JsonConverter'
      CONNECT_INTERNAL_VALUE_CONVERTER: 'org.apache.kafka.connect.json.JsonConverter'
      CONNECT_LOG4J_ROOT_LOGLEVEL: 'INFO'
      CONNECT_LOG4J_LOGGERS: 'org.apache.kafka.connect.runtime.rest=WARN,org.reflections=ERROR'
      CONNECT_LOG4J_APPENDER_STDOUT_LAYOUT_CONVERSIONPATTERN: "[%d] %p %X{connector.context}%m (%c:%L)%n"
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: '2'
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: '2'
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: '2'
      CONNECT_PLUGIN_PATH: '/usr/share/java,/usr/share/confluent-hub-components/,/data/connect-jars'
      # External secrets config
      # See https://docs.confluent.io/current/connect/security.html#externalizing-secrets
      CONNECT_CONFIG_PROVIDERS: 'file'
      CONNECT_CONFIG_PROVIDERS_FILE_CLASS: 'org.apache.kafka.common.config.provider.FileConfigProvider'

      # Class path to add custom authentication
      CLASSPATH: '/etc/kafka/secrets/${CLIENT_JAR}:/etc/kafka/secrets/${COMMON_JAR}'
      # Connect Worker
      CONNECT_SECURITY_PROTOCOL: SASL_SSL
      CONNECT_SSL_TRUSTSTORE_LOCATION: /etc/kafka/secrets/truststore.jks
      # RBAC
      CONNECT_SASL_MECHANISM: 'OAUTHBEARER'
      CONNECT_SASL_LOGIN_CALLBACK_HANDLER_CLASS: ${SASL_LOGIN_CALLBACK_HANDLER_CLASS}
      CONNECT_SASL_JAAS_CONFIG: |
              org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required \
              username="${KAFKA_USER}" \
              password="${KAFKA_PASSWORD}";

      # Connect Producer
      CONNECT_PRODUCER_SECURITY_PROTOCOL: SASL_SSL
      CONNECT_PRODUCER_SSL_TRUSTSTORE_LOCATION: /etc/kafka/secrets/truststore.jks
      # Producer
      CONNECT_PRODUCER_SASL_MECHANISM: 'OAUTHBEARER'
      CONNECT_PRODUCER_SASL_LOGIN_CALLBACK_HANDLER_CLASS: ${SASL_LOGIN_CALLBACK_HANDLER_CLASS}
      CONNECT_PRODUCER_CONFLUENT_MONITORING_INTERCEPTOR_SASL_MECHANISM: 'OAUTHBEARER'
      CONNECT_PRODUCER_CONFLUENT_MONITORING_INTERCEPTOR_SASL_LOGIN_CALLBACK_HANDLER_CLASS: ${SASL_LOGIN_CALLBACK_HANDLER_CLASS}
      CONNECT_PRODUCER_CONFLUENT_MONITORING_INTERCEPTOR_SASL_JAAS_CONFIG: |
              org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required \
              username="${KAFKA_USER}" \
              password="${KAFKA_PASSWORD}";

      # Connect Consumer
      CONNECT_CONSUMER_SECURITY_PROTOCOL: SASL_SSL
      CONNECT_CONSUMER_SSL_TRUSTSTORE_LOCATION: /etc/kafka/secrets/truststore.jks
      # Consumer
      CONNECT_CONSUMER_SASL_MECHANISM: 'OAUTHBEARER'
      CONNECT_CONSUMER_SASL_LOGIN_CALLBACK_HANDLER_CLASS: ${SASL_LOGIN_CALLBACK_HANDLER_CLASS}
      CONNECT_CONSUMER_CONFLUENT_MONITORING_INTERCEPTOR_SASL_MECHANISM: 'OAUTHBEARER'
      CONNECT_CONSUMER_CONFLUENT_MONITORING_INTERCEPTOR_SASL_LOGIN_CALLBACK_HANDLER_CLASS: ${SASL_LOGIN_CALLBACK_HANDLER_CLASS}
      CONNECT_CONSUMER_CONFLUENT_MONITORING_INTERCEPTOR_SASL_JAAS_CONFIG: |
              org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required \
              username="${KAFKA_USER}" \
              password="${KAFKA_PASSWORD}";

      # Reduce Connect memory utilization
      KAFKA_JVM_PERFORMANCE_OPTS: -server -XX:+UseG1GC -XX:GCTimeRatio=1
                  -XX:MinHeapFreeRatio=10 -XX:MaxHeapFreeRatio=20
                  -XX:MaxGCPauseMillis=10000 -XX:InitiatingHeapOccupancyPercent=35 -XX:+ExplicitGCInvokesConcurrent
                  -XX:MaxInlineLevel=15 -Djava.awt.headless=true

      # CONNECTOR_ properties are for the connector itself, example shown below
      CONNECTOR_NAME: bq-sink-connector
      CONNECTOR_CONNECTOR_CLASS: com.wepay.kafka.connect.bigquery.BigQuerySinkConnector
      CONNECTOR_PROJECT: ${CONNECTOR_PROJECT}
      CONNECTOR_CAMELCASE_DEFAULT_DATASET: ${CONNECTOR_DEFAULT_DATASET}
      CONNECTOR_TOPICS: ${CONNECTOR_TOPICS}
      CONNECTOR_KEY_IGNORE: "true"
      CONNECTOR_SCHEMA_IGNORE: "false"
      CONNECTOR_KEYFILE: /tmp/connect.json
      CONNECT_OFFSET_STORAGE_FILE_FILENAME: /tmp/connect.offsets

    volumes:
      - ./kafka-connect/secrets/connect-secrets.properties:/opt/confluent/secrets/connect-secrets.properties
      - ./kafka-connect/secrets/:/etc/kafka/secrets/
      - ./kafka-connect/scripts/create-bigquery-sink.sh:/kafka-connect/scripts/create-bigquery-sink.sh
    user: "1000:1000"