*.pem
*.pub
*connect-secrets.properties
*my_password.txt
logs
__pycache__
/**/docker/**/.env
# Kafka to Snowpipe Demo
/kafka-s3-snowpipe/.env
# XML Demo
/kafka-to-snowflake-xml/without-kafka/.env
/kafka-to-snowflake-xml/with-kafka/.env
# S3 Demo
/kafka-s3/.env
# DataDog Demo
/kafka-to-apms/.env
# Superset Demo
/kafka-postgres-superset/.env
# gcs Demo
/kafka-to-gcs/kafka-connect/secrets/connect-secrets.json
*.jks
*.env
*snapshot.jar
*.key
*.jaas

# Local .terraform directories
**/.terraform/*

# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log
crash.*.log

# Exclude all .tfvars files, which are likely to contain sensitive data, such as
# password, private keys, and other secrets. These should not be part of version 
# control as they are data points which are potentially sensitive and subject 
# to change depending on the environment.
*.tfvars
*.tfvars.json

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*

# Ignore CLI configuration files
.terraformrc
terraform.rc

# Other Terraform files
.terraform.lock.hcl

# node
node_modules/
